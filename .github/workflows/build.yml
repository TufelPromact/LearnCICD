# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
    #branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1.200

      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: /home/runner/.nuget/packages
          # An explicit key for restoring and saving the cache
          key: 'npm | LearnCICD/packages.lock.json'

      - name: Restore Packages
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Publish
        run: dotnet publish --configuration Release

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: Artifact
          path: LearnCICD/bin/Release/netcoreapp3.1/publish/
